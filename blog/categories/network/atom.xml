<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Network | 尹良灿得闲]]></title>
  <link href="http://wenLiangcan.github.io/blog/categories/network/atom.xml" rel="self"/>
  <link href="http://wenLiangcan.github.io/"/>
  <updated>2014-08-03T00:10:19+08:00</updated>
  <id>http://wenLiangcan.github.io/</id>
  <author>
    <name><![CDATA[wenLiangcan]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[IPv6 到 IPv4 的代理]]></title>
    <link href="http://wenLiangcan.github.io/blog/2014/05/18/ipv6-to-ipv4-proxy/"/>
    <updated>2014-05-18T01:30:00+08:00</updated>
    <id>http://wenLiangcan.github.io/blog/2014/05/18/ipv6-to-ipv4-proxy</id>
    <content type="html"><![CDATA[<p>为了安装 <a href="http://johnmacfarlane.net/pandoc/">Pandoc</a> 添加了 <a href="https://wiki.archlinux.org/index.php/Unofficial_user_repositories#haskell-core">haskell-core</a> 这个仓库（<code>AUR</code> 里的包要自己编译太麻烦了），不过要用 Goagent 代理才能访问，本来以为是墙了。</p>

<p>可是问题来了，更新/安装一般的官方仓库的包时我是不希望通过代理的，所以会先注释掉 <code>pacman.conf</code> 里的 <code>haskell-core</code> 再 <code>pacman -Syu</code>，这样一来已安装的 <code>haskell</code> 包会引起依赖问题导致更新无法继续。</p>

<p>无意中想起用 <a href="http://cloudmonitor.ca.com/en/ping.php">http://cloudmonitor.ca.com/en/ping.php</a>（以前叫 just-ping.com）ping 一下这个仓库的地址（xsounds.org）看看，结果发现这货只支持通过 <code>IPv6</code> 访问！！！而我学校的网络只支持 <code>IPv4</code>。。。</p>

<p>Google 了一番后让我找到了 <a href="https://www.sixxs.net/tools/gateway/">SixXs</a> 这个服务，提供了 <code>IPv6</code> 到 <code>IPv4</code> 的代理，只要在想要访问的网址后加上 ".ipv4.sixxs.org" 这个后缀就可以了，就像这样：
<code>
xsounds.org.ipv4.sixxs.org/~haskell/core/$arch
</code>
抱着尝试的心态添加到了 <code>pacman.conf</code> 里，结果真的可用！</p>

<p>ps: 通过这样的地址下载时就看不到进度条了，原因不明。 <br/>
pps: 其实 <code>SixXs</code> 也提供了 <code>IPv4</code> 到 <code>IPv6</code> 的代理服务的，把上面的后缀换成 ".sixxs.org" 或者 ".ipv6.sixxs.org" 就可以了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux 版锐捷客户端的 PKGBUILD]]></title>
    <link href="http://wenLiangcan.github.io/blog/2014/04/01/pkgbuild-for-rjsupplicant/"/>
    <updated>2014-04-01T19:58:00+08:00</updated>
    <id>http://wenLiangcan.github.io/blog/2014/04/01/pkgbuild-for-rjsupplicant</id>
    <content type="html"><![CDATA[<p>在愚人节的今天，学校全面强制使用 4.99 版本的锐捷客户端作为上网认证，之前一直在 Arch 下默默辛勤工作的 <a href="https://code.google.com/p/mentohust/">MentoHUST</a> 就这样挂掉了。。。</p>

<p>锐捷其实也有 Linux 版的，叫做 rjsupplicant，试了一下居然能用，不用离开 Linux 回到 Windows 算是万幸，不过不出所料的无法开多网卡建 WiFi 热点了，也只好如此。</p>

<p>自从学了一下下 PKGBUILD 怎么写，无论多小的程序或脚本，不用 <code>Pacman</code> 管理就不舒服，所以这次也打了个包，文件都在<a href="https://github.com/wenLiangcan/PKGBUILD/tree/master/rjsupplicant">这里</a>。</p>

<p>安装好后输入 <code>rjsupplicant --help</code> 查看帮助，我的认证格式如下：
<code>
sudo rjsupplicant -a1 -d0 -nenp2s0 -u&lt;用户名&gt; -p&lt;密码&gt;
</code></p>

<ul>
<li>-a:   1 的话表示有线连接，0 就是无线</li>
<li>-d:   1 使用 dhcp，0 不使用</li>
<li>-n:   网卡名</li>
</ul>


<p>退出可以按 <code>q</code>。</p>

<p>打包里还有个 <code>Systemd</code> 的 service 文件，从 <code>AUR</code> 上的 <a href="https://aur.archlinux.org/packages/mentohust-bin/">mentohust-bin</a> 里修改而来。安装好后如果要启用，先打开 <code>/usr/lib/systemd/system/rjsupplicant.service</code>，在<a href="https://github.com/wenLiangcan/PKGBUILD/blob/master/rjsupplicant/rjsupplicant.service#L10">第 10 行</a>添加上上述的认证参数，想在 <code>makepkg</code> 前添加的话请记得更新 <code>PKGBUILD</code> 里对应的 <code>md5sum</code> 值。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Python] 校园网网页验证登录脚本]]></title>
    <link href="http://wenLiangcan.github.io/blog/2013/11/24/school-network-auto-login-by-python/"/>
    <updated>2013-11-24T11:14:00+08:00</updated>
    <id>http://wenLiangcan.github.io/blog/2013/11/24/school-network-auto-login-by-python</id>
    <content type="html"><![CDATA[<p>依旧毫无技术含量 =。=，走了很多弯路，很多原理也没深入学习，不过还是记录一下吧。。。</p>

<p>学校的校园网可谓关卡重重，先要锐捷验证一次，然后还要在网页端登录一次，如果一段时间没有网络活动的话又会自动下线（挂 Q 也会）。</p>

<p>之前写过一个自动填写验证码的<a href="/blog/2013/06/30/iframe-dom/">小书签</a>,后来改成了油猴脚本，让浏览器记住帐号和密码后打开浏览器就能自动登录了。</p>

<p>可是能不能把这一步也省了，开机登录桌面就能直接上网呢？ 因为有一些开机启动的程序是需要网络的。比如 <a href="http://www.go-docky.com/">Docky</a> 的天气插件，获取不到数据就会变成一个问号难看死了（主要因为强迫症，每次网页登录后都要手动点击一下 Check Weather 把那个问号变回天气图标，虽然它会定期自动检查。。。），还有就是 Dropbox，因为这个原因我一直都没设置开机启动。</p>

<p>所以就想看看能不能用 <code>Python</code> 来实现这个功能了。</p>

<p>因为对这一切都毫无概念，所以一开始只能用固有的思维方式考虑问题： 不通过浏览器，就是要用其它语言实现填写文本框然后按确认？或者通过其它语言间接调用 <code>Javascript</code> ？ 导致在这个上面绕了好久，看了半天 <a href="http://code.google.com/p/pyv8/"><code>Pyv8</code></a>, <a href="http://code.google.com/p/python-spidermonkey/"><code>Python-Spidermonkey</code></a> 什么的也没弄懂怎么回事 T^T</p>

<p>其实填写文本框然后按确认按钮的过程就是填写一个表单（<code>&lt;form&gt;</code>），然后浏览器把表单中的数据提交到相应服务器的过程。而 <code>Python</code> 或者其它的一些语言都已经有相应的库提供 post/submit 网页表单数据的方法了。所以现在需要做的就是找出 提交数据的地址 和 需要提交的数据项，然后使用对应的方法提交数据。</p>

<p>提交数据的地址可以由 网页文件中 <code>&lt;form&gt;</code> 标签的 <code>action</code> 属性找到。</p>

<ul>
<li>校园网的验证页面地址格式为：<code>http://address/login.jsp?wlanuserip=xxx.xx.xxx.xx&amp;wlanacip=xxx.xxx.xx.xx</code></li>
<li><code>action</code> 的值为："/login.do"</li>
<li>所以提交地址就是：<code>http://address/login.do</code></li>
</ul>


<p>提交的数据就是 <code>&lt;form&gt;</code> 里的 文本框的输入值，有 5 个。两个属性 <code>type</code> 为 "hidden" 的 <code>&lt;input&gt;</code> 标签，叫做 eduuser 和 edubas，它门的值分别对应验证页面地址中的 wlanuserip 和 wlanacip 的值，前一个是我的内网 ip 地址，后一个没搞明白是啥。</p>

<p>另外 3 个是 userName1，password1，rand，就是用户名，密码，和验证码。 其中验证码在写小书签时已经知道，它的生成方法其实是由在浏览器中的 <code>Javascript</code> 产生一个四位数字，然后向服务器请求一张相应数值的图片。</p>

<p>小书签里使用 js 获取执行结果，不过现在我要直接 post 数据并不解释网页。既然那个四位数是客户端脚本所产生的，就是说并不由服务端所控制，所以现在我可以伪造这个事实，直接由我向服务器请求一张图片，而且那个数值也不用随机生成，找一个任意确定的四位数就可以了。请求的方式是访问这样一个格式的地址：<code>http://address/common/image.jsp?rand=xxxx</code></p>

<p>其实到这里我原本的想法是，服务器应该会把对验证页面地址和验证码图片地址的访问作为同一个 session，就是服务器会记录下你请求了的图片的验证码数值，在提交表单时里面的 rand 项的值必须与之相符才能通过验证（关于 session 什么的我不太知道是不是该这么表达）。 可事实是，那个验证码图片的请求不是必须的，就是说我可以直接随便提交一个四位数作为 rand 的值也能通过验证！！！ 这个页面的验证码的部分除了那张图片，全都是由客户端 js 来完成的 Σ(っ  °Д °;)っ</p>

<p>整个脚本所做的事情就是，提交一个包含验证信息的表单。</p>

<p>```python autologin.py</p>

<h1>!/usr/bin/env python</h1>

<p>import requests, time</p>

<p>url = "http://address/login.do"
info = {'userName1': '...',</p>

<pre><code>    'password1': '...',
    'rand': '2222',
    'eduuser': '...',
    'edubas': '...'
   }
</code></pre>

<p>while True:</p>

<pre><code>requests.post(url, data = info)
time.sleep(65)
</code></pre>

<p>```</p>

<p>这里用了 <a href="http://docs.python-requests.org/en/latest/"><code>requests</code></a> 这个模块，设置每 65 秒验证一次防止自动下线（表问我为神马是 65 而不是 60）。</p>

<p>ps:</p>

<p>过程中还找到了 Firefox 的一个扩展 <a href="https://addons.mozilla.org/En-us/firefox/addon/httpfox/">HttpFox</a>，可以用来分析 HTTP 网络活动，下面是一张从访问验证页面到提交信息的记录截图： <br/>
<img src="https://dl.dropboxusercontent.com/s/47sr6ye8bu1vuxs/http.png?dl=1&amp;token_hash=AAHk_E3lc7x88hOB6t0fMSLdXRf7z5otjfQN-rbNTDahIw" alt="http" /> <br/>
通过它才发现我原本还遗漏了 eduuser 和 edubas 两个数据项。</p>

<p>另外，点击下面的 "raw"，可以看到还能通过把数据嵌入到 url 地址的方式提交表单： <br/>
<img src="https://dl.dropboxusercontent.com/s/uuhxpexkwq5bf3f/raw.png?dl=1&amp;token_hash=AAHdusJ29VHNtLIInwRFziMi6vuNlFwEkM6efKlGepcUew" alt="raw" /> <br/>
url 的格式为： <code>http://address/login.do?userName1=xxx&amp;password1=xxx&amp;rand=xxxx&amp;eduuser=xxx&amp;edubas=xxx</code></p>

<p>pps:</p>

<p>接下来打算把我的树莓派设置成路由器，用这个脚本进行验证（话说买回来没多久就闲置了 -________-''</p>

<p>还有不知要不要写成 Daemon 的形式？或者学一下写个 Systemd 的 Service 来运行？现在暂时用 Openbox 来自动执行。</p>

<p>不过还都是打算，我的拖延症又犯了。。。</p>

<h2>参考资料</h2>

<ul>
<li><a href="http://www.averainy.info/how-to-use-python-submit-a-web-form/">如何用python提交一个web表单</a></li>
<li><a href="http://docs.python-requests.org/en/latest/user/quickstart/">Requests Quickstart</a></li>
<li><a href="http://www.w3schools.com/tags/tag_form.asp">HTML &lt; form> Tag</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
